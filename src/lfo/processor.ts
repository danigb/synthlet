export const PROCESSOR = `(()=>{function C(t){return Object.keys(t).map(e=>{let{min:r,max:s,defaultValue:f}=t[e];return{name:e,minValue:r,maxValue:s,defaultValue:f,automationRate:"k-rate"}})}var a=Math.PI,x=2*a,g=a*a,O=4/a,v=-4/g,M=.225;function T(t){let e=O*t+v*t*Math.abs(t);return M*(e*Math.abs(e)-e)+e}var n=5/12,i=Math.pow(10,-1/n),F=1/(1-i),E=1/(1+n*Math.log10(1+i)),N=1/(1+-Math.pow(10,-1/n)),y=n*Math.log10(1+i),A=1/(-n*Math.log10(i)+y);function l(t){if(t>=1)return 1;if(t<=0)return 0;let e=-n*A*Math.log10(1-t+i)+y;return R(e,0,1)}function R(t,e,r){return Math.max(e,Math.min(r,t))}function o(t){return 2*t-1}function S(t,e){return(e+t%e)%e}function w(t,e,r){return e+S(t-e,r-e)}var m=class{constructor(e){this.sampleRate=e;this.mcounter=0;this.phaseInc=0;this.phaseOffset=0;this.freqOffset=0;this.freqHz=0;this.state={modCounter:0,phaseInc:0,phaseOffset:0,frequency_Hz:0};this.mcounter=0,this.phaseOffset=0,this.freqOffset=0}setFrequency(e){this.freqHz=e,this.phaseInc=this.freqHz/this.sampleRate}addPhaseOffset(e,r=!1){this.phaseOffset=e,this.phaseInc>0?this.mcounter+=e:this.mcounter-=e,r&&this.wrapClock()}advanceClock(e){this.mcounter+=e*this.phaseInc}wrapClock(){if(this.mcounter>=0&&this.mcounter<=1)return!1;let e=this.mcounter<0;return!e&&this.mcounter<2?this.mcounter-=1:e&&this.mcounter>-1?this.mcounter+=1:this.mcounter=w(this.mcounter,0,1),!0}};var c=class{constructor(e){this.sampleRate=e;this.active=!1;this.value=0}tick(){}};var u=class{constructor(){this.counter=0;this.targetValueInSamples=0}resetTimer(){this.counter=0}setExpireSamples(e){this.targetValueInSamples=e}setExpireMilliSec(e,r){this.setExpireSamples(Math.floor(r*(e/1e3)))}getExpireSamples(){return this.targetValueInSamples}timerExpired(){return this.counter>=this.targetValueInSamples}advanceTimer(e=1){this.counter+=e}getTick(){return this.counter}};var d={waveform:{min:0,max:9,defaultValue:0},freq:{min:.02,max:200,defaultValue:10},amp:{min:0,max:1e3,defaultValue:1}},p=class{constructor(e){this.sampleRate=e;this.rshOutputValue=0;this.renderComplete=!1;this.params={frequencyHz:10,waveform:0,mode:0};switch(this.fadeInModulator=new c(e),this.lfoClock=new m(e),this.sampleHoldTimer=new u,this.delayTimer=new u,this.rshOutputValue=this.noiseGen.doWhiteNoise(),this.renderComplete=!1,this.lfoClock.setFrequency(d.freq.defaultValue),this.params.waveform){case 0:this.lfoClock.addPhaseOffset(.25);break;case 2:case 3:this.lfoClock.addPhaseOffset(.5);break}}fillAudioBuffer(e){for(let r=0;r<e.length;r++)e[r]=this.render(),this.lfoClock.advanceClock(1)}fillControlBuffer(e){e[0]=this.render(),this.lfoClock.advanceClock(e.length)}render(){if(this.renderComplete)return 0;if(!this.delayTimer.timerExpired())return this.delayTimer.advanceTimer(),0;if(this.lfoClock.wrapClock()&&this.params.mode===1)return this.renderComplete=!0,0;let r=0;switch(this.params.waveform){case 0:r=1-2*Math.abs(o(this.lfoClock.mcounter));break;case 1:let s=this.lfoClock.mcounter*x-a;r=T(-s);break;case 2:r=o(this.lfoClock.mcounter);break;case 3:r=-o(this.lfoClock.mcounter);break;case 4:r=o(l(this.lfoClock.mcounter));break;case 5:r=o(l(1-this.lfoClock.mcounter));break;case 6:r=o(l(Math.abs(o(this.lfoClock.mcounter))));break;case 7:r=this.lfoClock.mcounter<=.5?1:-1;break;case 8:this.sampleHoldTimer.timerExpired()?(this.rshOutputValue=this.noiseGen.doWhiteNoise(),this.sampleHoldTimer.resetTimer()):this.sampleHoldTimer.advanceTimer(),r=this.rshOutputValue;break;case 9:break;default:throw Error(`Unknown waveform ${this.params.waveform}`)}return this.fadeInModulator.active&&(r*=this.fadeInModulator.value,this.fadeInModulator.tick()),r}update(e,r){this.params.frequencyHz=r,this.lfoClock.setFrequency(r)}};var I=C(d),b=class extends AudioWorkletProcessor{constructor(){super();this.impulse=new p(sampleRate)}process(r,s,f){let P=f.freq[0];this.impulse.update(0,P);let k=s[0];for(let h=0;h<k.length;h++)this.impulse.fillControlBuffer(k[h]);return!0}static get parameterDescriptors(){return I}};registerProcessor("LfoWorklet",b);})();`;
