export const PROCESSOR = `(()=>{function d(t){return Object.keys(t).map(e=>{let{min:r,max:n,defaultValue:o}=t[e];return{name:e,minValue:r,maxValue:n,defaultValue:o,automationRate:"k-rate"}})}var i=Math.PI,M=2*i,C=i*i,g=4/i,W=-4/C;var a=5/12,u=Math.pow(10,-1/a),q=1/(1-u),v=1/(1+a*Math.log10(1+u)),S=1/(1+-Math.pow(10,-1/a)),w=a*Math.log10(1+u),T=1/(-a*Math.log10(u)+w);function b(t){return 2*t-1}function P(t,e){return(e+t%e)%e}function x(t,e,r){return e+P(t-e,r-e)}var c=class{constructor(e){this.sampleRate=e;this.mcounter=0;this.phaseInc=0;this.phaseOffset=0;this.freqOffset=0;this.freqHz=0;this.mcounter=0,this.phaseOffset=0,this.freqOffset=0}setFrequency(e){this.freqHz=e,this.phaseInc=this.freqHz/this.sampleRate}addPhaseOffset(e,r){this.phaseOffset=e,this.phaseInc>0?this.mcounter+=e:this.mcounter-=e,r&&this.wrapClock()}removePhaseOffset(){this.phaseInc>0?this.mcounter+=-this.phaseOffset:this.mcounter-=-this.phaseOffset}advanceClock(e){this.mcounter+=e*this.phaseInc}wrapClock(){if(this.mcounter>=0&&this.mcounter<=1)return!1;let e=this.mcounter<0;return!e&&this.mcounter<2?this.mcounter-=1:e&&this.mcounter>-1?this.mcounter+=1:this.mcounter=x(this.mcounter,0,1),!0}};var m={frequency:{min:0,max:1e4,defaultValue:1},mix:{min:0,max:1,defaultValue:.5},pulseWidth:{min:0,max:1,defaultValue:.5}},l=class{constructor(e){this.sampleRate=e;this.oscClock=new c(e),this.waveform=1,this.waveform===1&&(this.oscClock.mcounter=.5),this.mix=m.mix.defaultValue,this.pulseWidth=m.pulseWidth.defaultValue}update(e,r,n){this.waveform=e,this.oscClock.setFrequency(r),this.mix=n}renderAudio(e){if(e.length!==0)for(let r=0;r<e[0].length;r++){let n=this.render();this.oscClock.advanceClock(1),this.oscClock.wrapClock();for(let o=0;o<e.length;o++)e[o][r]=n}}render(){let e=k(this.oscClock);if(this.waveform===1)return e;this.oscClock.addPhaseOffset(this.pulseWidth,!0);let r=k(this.oscClock),n=this.pulseWidth<.5?1/(1-this.pulseWidth):1/this.pulseWidth,o=(.5*e-.5*r)*n;if(this.oscClock.removePhaseOffset(),this.waveform===0)return o;if(this.waveform===2)return e*(1-this.mix)+o*this.mix;throw new Error("Invalid waveform")}};function k(t){let e=b(t.mcounter),r=0,n=1;return r=y(t.mcounter,Math.abs(t.phaseInc),n,!0),e+=r,e}function y(t,e,r,n){let o=0;if(t>1-e){let s=(t-1)/e;o=r*(s*s+2*s+1)}else if(t<e){let s=t/e;o=r*(2*s-s*s-1)}return n||(o*=-1),o}var O=d(m),p=class extends AudioWorkletProcessor{constructor(){super();this.impulse=new l(sampleRate)}process(r,n,o){let s=o.freq[0];this.impulse.setParams(s);let h=n[0];for(let f=0;f<h.length;f++)this.impulse.fillControl(h[f]);return!0}static get parameterDescriptors(){return O}};registerProcessor("OscWorklet",p);})();`;
