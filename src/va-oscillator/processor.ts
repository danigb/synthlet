export const PROCESSOR = `(()=>{function p(r){return Object.keys(r).map(e=>{let{min:t,max:n,defaultValue:o}=r[e];return{name:e,minValue:t,maxValue:n,defaultValue:o,automationRate:"k-rate"}})}var i=Math.PI,M=2*i,x=i*i,g=4/i,W=-4/x;var a=5/12,u=Math.pow(10,-1/a),S=1/(1-u),T=1/(1+a*Math.log10(1+u)),q=1/(1+-Math.pow(10,-1/a)),C=a*Math.log10(1+u),v=1/(-a*Math.log10(u)+C);function c(r,e,t){return Math.max(e,Math.min(t,r))}function h(r){return 2*r-1}function P(r,e){return(e+r%e)%e}function d(r,e,t){return e+P(r-e,t-e)}var m=class{constructor(e){this.sampleRate=e;this.mcounter=0;this.phaseInc=0;this.phaseOffset=0;this.freqOffset=0;this.freqHz=0;this.mcounter=0,this.phaseOffset=0,this.freqOffset=0}setFrequency(e){this.freqHz=e,this.phaseInc=this.freqHz/this.sampleRate}addPhaseOffset(e,t){this.phaseOffset=e,this.phaseInc>0?this.mcounter+=e:this.mcounter-=e,t&&this.wrapClock()}removePhaseOffset(){this.phaseInc>0?this.mcounter+=-this.phaseOffset:this.mcounter-=-this.phaseOffset}advanceClock(e){this.mcounter+=e*this.phaseInc}wrapClock(){if(this.mcounter>=0&&this.mcounter<=1)return!1;let e=this.mcounter<0;return!e&&this.mcounter<2?this.mcounter-=1:e&&this.mcounter>-1?this.mcounter+=1:this.mcounter=d(this.mcounter,0,1),!0}};var w={waveform:0,pulseWidth:.5,mix:.5},k={frequency:{min:0,max:1e4,defaultValue:1},mix:{min:0,max:1,defaultValue:.5},pulseWidth:{min:0,max:1,defaultValue:.5}},l=class{constructor(e){this.sampleRate=e;this.params={...w};this.oscClock=new m(e),this.params.waveform===1&&(this.oscClock.mcounter=.5)}setParams(e,t,n,o){this.params.waveform=c(Math.floor(e),0,3),this.oscClock.setFrequency(t),this.params.pulseWidth=c(n,0,1),this.params.mix=c(o,0,1)}renderAudio(e){if(e.length!==0)for(let t=0;t<e[0].length;t++){let n=this.render();this.oscClock.advanceClock(1),this.oscClock.wrapClock();for(let o=0;o<e.length;o++)e[o][t]=n}}render(){let{params:e}=this,t=b(this.oscClock);if(e.waveform===1)return t;this.oscClock.addPhaseOffset(e.pulseWidth,!0);let n=b(this.oscClock),o=e.pulseWidth<.5?1/(1-e.pulseWidth):1/e.pulseWidth,s=(.5*t-.5*n)*o;if(this.oscClock.removePhaseOffset(),e.waveform===0)return s;if(e.waveform===2)return t*(1-e.mix)+s*e.mix;throw new Error("Invalid waveform")}};function b(r){let e=h(r.mcounter),t=0,n=1;return t=O(r.mcounter,Math.abs(r.phaseInc),n,!0),e+=t,e}function O(r,e,t,n){let o=0;if(r>1-e){let s=(r-1)/e;o=t*(s*s+2*s+1)}else if(r<e){let s=r/e;o=t*(2*s-s*s-1)}return n||(o*=-1),o}var y=p(k),f=class extends AudioWorkletProcessor{constructor(){super();this.oscillator=new l(sampleRate)}process(t,n,o){this.oscillator.setParams(o.waveform[0],o.frequency[0],o.pulseWidth[0],o.mix[0]);let s=n[0];return this.oscillator.renderAudio(s),!0}static get parameterDescriptors(){return y}};registerProcessor("VaOscillatorWorklet",f);})();`;
