export const PROCESSOR = `(()=>{function c(n){return Object.keys(n).map(e=>{let{min:t,max:r,init:o}=n[e];return{name:e,minValue:t,maxValue:r,defaultValue:o,automationRate:"k-rate"}})}var p={frequency:{min:0,max:1e4,init:1}},s=class{constructor(e){this.sampleRate=e,this.dt=1/e,this.phase=1-this.dt,this.frequency=1}setParams(e){this.frequency=e}fillControl(e){let t=this.phase+this.dt*this.frequency*e.length;t>=1?(e[0]=1,this.phase=t%1):(e[0]=0,this.phase=t)}fillAudio(e){let t=this.phase,r=e.length;for(let o=0;o<r;o++)t+=this.dt*this.frequency,t>=1?(e[o]=1,t-=1):e[o]=0;this.phase=t}};var d=c(p),i=class extends AudioWorkletProcessor{constructor(){super();this.impulse=new s(sampleRate)}process(t,r,o){let m=o.frequency[0];this.impulse.setParams(m);let u=r[0];for(let a=0;a<u.length;a++)this.impulse.fillControl(u[a]);return!0}static get parameterDescriptors(){return d}};registerProcessor("ImpulseWorklet",i);})();`;
