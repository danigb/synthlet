export const PROCESSOR = `(()=>{function M(c){return Object.keys(c).map(e=>{let{min:r,max:n,defaultValue:s}=c[e];return{name:e,minValue:r,maxValue:n,defaultValue:s,automationRate:"k-rate"}})}var l=Math.PI,b=2*l,w=l*l,N=4/l,O=-4/w;var P=5/12,d=Math.pow(10,-1/P),B=1/(1-d),D=1/(1+P*Math.log10(1+d)),R=1/(1+-Math.pow(10,-1/P)),C=P*Math.log10(1+d),W=1/(-P*Math.log10(d)+C);function k(c){let e=1/(2*c),r=0,n=0,s=0,o={LPF1:0,HPF1:0,APF1:0,ANM_LPF1:0};function i(t){if(t===r)return;r=t;let a=Math.tan(b*r*e);s=a/(1+a)}function m(t){let a=(t-n)*s;return o.LPF1=(t-n)*s+n,o.HPF1=t-o.LPF1,o.APF1=o.LPF1-o.HPF1,o.ANM_LPF1=o.LPF1+s*o.HPF1,n=a+o.LPF1,o}return i(1e3),{update:i,process:m}}function y(c){let e=0,r=0,n=0,s=0,o=0,i=0,m=1/(2*sampleRate),t={LPF2:0,HPF2:0,BPF2:0,BSF2:0,ANM_LPF2:0},a=0,u=0;_(1e3,.707);function _(p,f){if(p===o&&f===f)return;e=Math.tan(b*o*m);let g=1/(2*f);r=1/(1+2*g*e+e*e),f>24.9?n=e:n=2*g+e;let x=sampleRate/2/p;return s=1/(e*x*x),!0}function V(p){return t.HPF2=r*(p-n*a-u),t.BPF2=e*t.HPF2+a,t.LPF2=e*t.BPF2+u,t.BSF2=t.HPF2+t.LPF2,t.ANM_LPF2=t.LPF2+s*a,a=e*t.HPF2+t.BPF2,u=e*t.BPF2+t.LPF2,t}return{update:_,process:V}}var A={filterType:{min:0,max:14,defaultValue:1},frequency:{min:0,max:1e4,defaultValue:1e3},resonance:{min:0,max:1,defaultValue:.5}},h=class{constructor(e){this.sampleRate=e;this.filterType=0,this.va1=k(e),this.va2=y(e),this.process=r=>r,this.setParams(1,A.frequency.defaultValue,A.resonance.defaultValue)}setParams(e,r,n){this.filterType!==e&&this.#e(e),this.#t(r,n)}#e(e){switch(this.filterType=e,e){case 1:this.process=r=>this.va1.process(r).LPF1;break;case 2:this.process=r=>this.va1.process(r).HPF1;break;case 3:this.process=r=>this.va1.process(r).APF1;break;default:this.process=r=>r;break}}#t(e,r){switch(this.filterType){case 1:case 2:case 3:this.va1.update(e)}}};var F=class extends AudioWorkletProcessor{constructor(){super();this.processor=new h(sampleRate)}process(r,n,s){let o=s.filterType[0],i=s.frequency[0],m=s.resonance[0];this.processor.setParams(o,i,m);let t=r[0][0],a=n[0][0];if(!t||!a)return!0;for(let u=0;u<a.length;u++)a[u]=this.processor.process(t[u]);return!0}static get parameterDescriptors(){return F.PARAMS}},L=F;L.PARAMS=M(A);registerProcessor("VaFilterWorklet",L);})();`;
