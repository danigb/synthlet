export const PROCESSOR = `(()=>{var a=class{constructor(){this.value=0,this.a=.5,this.d=900.1,this.s=.1,this.r=100,this.stage=3}start(){this.stage=0}release(){this.stage=2}process(t){switch(this.stage){case 0:this.value+=(1.1-this.value)*this.a*t,this.value>=1&&(this.value=1,this.stage=1);break;case 1:this.value+=(this.s-this.value)*this.d*t;break;case 2:this.value+=(-.1-this.value)*this.r*t,this.value<=0&&(this.value=0,this.stage=3);break}return this.value}};var b=Math.PI*2;function u(e,t){return e<t?(e/=t,e+e-e*e-1):e>1-t?(e=(e-1)/t,e*e+e+e+1):0}function o(e,t,s){let r=e<s?1:-1;return r+=u(e,t),r-=u((e+(1-s))%1,t),r}var A=2/4294967295;var h=class{constructor(t){this.phase=0;this.phaseIncrement=0;this.triCurrent=0;this.triLast=0;this.noiseValue=19.19191919191919;this.waveform=t}process(t,s){for(this.phaseIncrement=s*t,this.phase+=this.phaseIncrement;this.phase>1;)this.phase-=1;return this.calc(this.waveform)}calc(t){switch(t){case 0:return Math.sin(this.phase*b);case 1:return this.triLast=this.triCurrent,this.triCurrent=this.phaseIncrement*o(this.phase,this.phaseIncrement,.5)+(1-this.phaseIncrement)*this.triLast,this.triCurrent*5;case 2:return 1-2*this.phase+u(this.phase,this.phaseIncrement);case 3:return o(this.phase,this.phaseIncrement,.5);case 4:return o(this.phase,this.phaseIncrement,.75);case 5:return this.noiseValue+=19,this.noiseValue*=this.noiseValue,this.noiseValue-=Math.floor(this.noiseValue),this.noiseValue-.5;default:return 0}}getFromWaveform(t,s,r){for(this.phaseIncrement=r*t,this.phase+=this.phaseIncrement;this.phase>1;)this.phase-=1;if(s.switching){let i=0;return i+=(1-s.mix)*this.calc(s.previous),i+=s.mix*this.calc(s.current),i}else return this.calc(s.current)}};var S=e=>440*Math.pow(2,(e-69)/12),c=class{#e;#s;#t;constructor(){this.#e=new h(1),this.#t=new a,this.note=60}set note(t){this.#s=t,this.targetFrequency=S(t)}get note(){return this.#s}start(){this.#t.start()}release(){this.#t.release()}process(t){let s=this.#t.process(t);return this.#e.process(t,this.targetFrequency)*s}};var m=class extends AudioWorkletProcessor{constructor(){super();this.voice=new c,this.dt=1/sampleRate,this.port.postMessage("SynthletProcessor 05 ready: "+this.dt),this.started=!1}process(s,r,i){let n=i.trigger[0];n!==0&&!this.started?(this.started=!0,this.port.postMessage("start: "+n),this.voice.start()):n===0&&this.started&&(this.port.postMessage("release: "+n),this.started=!1,this.voice.release());let v=i.note[0];this.voice.note=v;let p=r[0][0];for(let l=0;l<p.length;l++)p[l]=this.voice.process(this.dt);return!0}static get parameterDescriptors(){return[{name:"trigger",defaultValue:0,minValue:0,maxValue:1,automationRate:"k-rate"},{name:"note",defaultValue:60,minValue:0,maxValue:127,automationRate:"k-rate"}]}};registerProcessor("SynthletProcessor",m);})();`;
