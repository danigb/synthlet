export const PROCESSOR = `"use strict";(()=>{function o(t){switch(t){case 0:return u;case 1:return a;case 2:return b;case 3:return h;default:return u}}function u(t){return t}function a(t){return Math.pow(10,t/20)}function b(t){return 20*Math.log10(t)}function h(t,n,r){return n+t*(r-n)}var i=class extends AudioWorkletProcessor{r;s;c;constructor(){super(),this.r=!0,this.s=0,this.c=o(this.s),this.port.onmessage=n=>{switch(n.data.type){case"DISPOSE":this.r=!1;break}}}process(n,r,e){this.s!==e.scale[0]&&(this.s=e.scale[0],this.c=o(this.s));let s=e.input[0]+e.mod[0],c=this.c(s,e.min[0],e.max[0])*e.gain[0]+e.offset[0];return r[0][0].fill(c),this.r}static get parameterDescriptors(){return[["scale",0,0,10],["input",0,-2e4,2e4],["offset",0,-2e4,2e4],["min",0,-2e4,2e4],["max",1,-2e4,2e4],["gain",1,-2e4,2e4],["mod",0,-2e4,2e4]].map(([n,r,e,s])=>({name:n,defaultValue:r,minValue:e,maxValue:s,automationRate:"k-rate"}))}};registerProcessor("ParamProcessor",i);})();`;
