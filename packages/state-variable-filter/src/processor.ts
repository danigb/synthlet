export const PROCESSOR = `"use strict";(()=>{function x(n,e,r){return Math.max(e,Math.min(r,n))}function V(n){let e=1e3,r=.5,o=1,s=.5/n,c=2*Math.PI,b=0,t=0,P=0,m=0,p=0,f=0,u=0,h=0;function g(a){if(o=a.filterType[0],a.frequency[0]!==e||a.resonance[0]!==r){e=a.frequency[0],r=a.resonance[0];let y=x(e,16,n/2),i=1/x(r,.025,40);t=2*n*Math.tan(c*s*y)*s,b=1/(1+i*t+t*t),P=t+i}}function k(a,y){for(let l=0;l<a.length;l++){let i=a[l];f=(i-P*m-p)*b,u=t*f+m,h=t*u+p,m=t*f+u,p=t*u+h,y[l]=o===1?h:o===3?f:o===2?u:i}}return{update:g,fill:k}}var d=class extends AudioWorkletProcessor{static parameterDescriptors=[{name:"filterType",defaultValue:1,minValue:0,maxValue:3,automationRate:"k-rate"},{name:"frequency",defaultValue:1e3,minValue:16,maxValue:2e4,automationRate:"k-rate"},{name:"resonance",defaultValue:.5,minValue:0,maxValue:40,automationRate:"k-rate"}];f;r;constructor(){super(),this.f=V(sampleRate),this.r=!0,this.port.onmessage=e=>{switch(e.data.type){case"STOP":this.r=!1;break}}}process(e,r,o){let s=e[0][0],c=r[0][0];return this.f.update(o),s&&c&&this.f.fill(s,c),this.r}};registerProcessor("StateVariableFilterWorkletProcessor",d);})();`;
