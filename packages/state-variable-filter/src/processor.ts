export const PROCESSOR = `"use strict";(()=>{function g(c,t,e){return Math.max(t,Math.min(e,c))}function q(c){let t=1e3,e=.5,n=0,s=.5/c,m=2*Math.PI,x=0,r=0,P=0,l=0,p=0,h=0,u=0,i=0;function A(o){if(n=o.type[0],o.frequency[0]!==t||o.resonance[0]!==e){t=o.frequency[0],e=o.resonance[0];let y=g(t,16,c/2),f=1/g(e,.025,40);r=2*c*Math.tan(m*s*y)*s,x=1/(1+f*r+r*r),P=r+f}}function b(o,y){for(let a=0;a<o.length;a++){let f=o[a];h=(f-P*l-p)*x,u=r*h+l,i=r*u+p,l=r*h+u,p=r*u+i,y[a]=n===1?i:n===2?h:n===3?u:f}}return{update:A,fill:b}}var d=class extends AudioWorkletProcessor{f;r;constructor(){super(),this.f=q(sampleRate),this.r=!0,this.port.onmessage=t=>{switch(t.data.type){case"STOP":this.r=!1;break}}}process(t,e,n){let s=t[0][0],m=e[0][0];return this.f.update(n),s&&m&&this.f.fill(s,m),this.r}static get parameterDescriptors(){return[["type",1,0,3],["frequency",1e3,20,2e4],["resonance",1,0,40]].map(([t,e,n,s])=>({name:t,defaultValue:e,minValue:n,maxValue:s,automationRate:"k-rate"}))}};registerProcessor("StateVariableFilterWorkletProcessor",d);})();`;
