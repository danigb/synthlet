export const PROCESSOR = `"use strict";(()=>{function g(o,e,r){return Math.max(e,Math.min(r,o))}function k(o){let e=1e3,r=.5,a=0,s=.5/o,f=2*Math.PI,y=0,t=0,P=0,i=0,h=0,m=0,u=0,p=0;function q(n){if(a=n.filterType[0],n.frequency[0]!==e||n.resonance[0]!==r){e=n.frequency[0],r=n.resonance[0];let d=g(e,16,o/2),l=1/g(r,.025,40);t=2*o*Math.tan(f*s*d)*s,y=1/(1+l*t+t*t),P=t+l}}function A(n,d){for(let c=0;c<n.length;c++){let l=n[c];m=(l-P*i-h)*y,u=t*m+i,p=t*u+h,i=t*m+u,h=t*u+p,d[c]=a===1?p:a===2?m:a===3?u:l}}return{update:q,fill:A}}var x=class extends AudioWorkletProcessor{static parameterDescriptors=[{name:"filterType",defaultValue:1,minValue:0,maxValue:3,automationRate:"k-rate"},{name:"frequency",defaultValue:1e3,minValue:20,maxValue:2e4,automationRate:"k-rate"},{name:"resonance",defaultValue:.5,minValue:0,maxValue:40,automationRate:"k-rate"}];f;r;constructor(){super(),this.f=k(sampleRate),this.r=!0,this.port.onmessage=e=>{switch(e.data.type){case"STOP":this.r=!1;break}}}process(e,r,a){let s=e[0][0],f=r[0][0];return this.f.update(a),s&&f&&this.f.fill(s,f),this.r}};registerProcessor("StateVariableFilterWorkletProcessor",x);})();`;
