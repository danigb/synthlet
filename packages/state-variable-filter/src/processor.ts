export const PROCESSOR = `"use strict";(()=>{function M(p){let a=1/p,n=0,e=0,l=0,t=0,s=0,o=0,m=0,P=0,k=0,_=0,g=0,A=-1,d=0,x=0;function w(b,c,h){if(c===d&&A===b&&h===x)return;A=b,d=c,x=h;let i=Math.tan(c*a*Math.PI),r=1/Math.max(h,1e-4);switch(n=1/(1+i*(i+r)),e=i*n,l=i*e,b){case 1:t=0,s=0,o=1;break;case 2:t=0,s=1,o=0;break;case 3:t=1,s=-r,o=-1;break;case 4:t=1,s=-r,o=0;break;case 5:t=1,s=-r,o=-2;break;case 6:t=1,s=-2*r,o=0;default:t=1,s=0,o=0;break}}return function(c,h,i,r,R){w(i,r[0],R);let Q=r.length===c.length;for(let u=0;u<c.length;u++){let B=c[u],y=r[u];Q&&w(i,r[u],R),g=B-P,k=n*m+e*g,_=P+e*m+l*g,m=2*k-m,P=2*_-P;let f=t*B+s*k+o*_;h[u]=f}}}var F=class extends AudioWorkletProcessor{r;p;constructor(){super(),this.r=!0,this.p=M(sampleRate),this.port.onmessage=a=>{switch(a.data.type){case"STOP":this.r=!1;break}}}process(a,n,e){if(a[0].length===0)return this.r;let l=a[0][0],t=n[0][0];return this.p(l,t,e.type[0],e.frequency,e.Q[0]),this.r}static get parameterDescriptors(){return[["type",1,0,10,"k"],["frequency",1e3,20,2e4,"a"],["Q",.5,.025,40,"k"]].map(([a,n,e,l,t])=>({name:a,defaultValue:n,minValue:e,maxValue:l,automationRate:t+"-rate"}))}};registerProcessor("SvfProcessor",F);})();`;
