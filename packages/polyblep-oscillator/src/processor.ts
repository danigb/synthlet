export const PROCESSOR = `"use strict";(()=>{var r=class{onedsr;freq;phs;inc;prev;R;x;y;constructor(t){this.onedsr=1/t,this.freq=0,this.phs=0,this.inc=0,this.prev=0,this.R=Math.exp(-1/(.0025*t)),this.x=0,this.y=0}setFreq(t){this.freq!==t&&(this.freq=t,this.inc=t*this.onedsr)}sine(){let t=Math.sin(this.phs);return this.phs+=this.inc,this.phs>1&&(this.phs-=1),t}saw(){let t=m(this.phs,this.inc);return this.phs+=this.inc,this.phs>1&&(this.phs-=1),t}square(){let t=p(this.phs,this.inc);return this.phs+=this.inc,this.phs>1&&(this.phs-=1),t}triangle(){let t=p(this.phs,this.inc);t*=4/this.freq,t+=this.prev,this.prev=t,this.y=t-this.x+this.R*this.y,this.x=t;let i=this.y*.8;return this.phs+=this.inc,this.phs>1&&(this.phs-=1),i}};function h(s,t){if(s<t){let i=s/t;return i+i-i*i-1}else if(s>1-t){let i=(s-1)/t;return i+i+i*i+1}else return 0}function p(s,t){return(s<.5?-1:1)-h(s,t)+h((s+.5)%1,t)}function m(s,t){return s*2-1-h(s,t)}var n=class extends AudioWorkletProcessor{static parameterDescriptors=[{name:"waveform",defaultValue:1,minValue:0,maxValue:3,automationRate:"k-rate"},{name:"frequency",defaultValue:1e3,minValue:16,maxValue:2e4,automationRate:"k-rate"}];r;p;w;constructor(){super(),this.r=!0,this.p=new r(sampleRate),this.w=[this.p.sine.bind(this.p),this.p.saw.bind(this.p),this.p.square.bind(this.p),this.p.triangle.bind(this.p)],this.port.onmessage=t=>{switch(t.data.type){case"DISPOSE":this.r=!1;break}}}process(t,i,o){let a=o.frequency[0],l=o.waveform[0],c=this.w[l];this.p.setFreq(a);let u=i[0][0];for(let e=0;e<u.length;e++)u[e]=c();return this.r}};registerProcessor("PolyBLEPWorkletProcessor",n);})();`;
