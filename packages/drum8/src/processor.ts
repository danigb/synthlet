export const PROCESSOR = `"use strict";(()=>{var x=Math.PI*2;function y(t,a,r){if(r>a)throw Error("endFreq must be less than startFreq");let u=1/t,n=!1,c=0,s=(r-a)*u,e=a,o=1;return{update(i,l){i===1?n||(n=!0,e=a):n=!1,l!==o&&(o=l,s=(r-a)*l*u)},next(){let i=Math.sin(c*x);return e>r&&(e+=s),c+=e*u,c>=1&&(c-=1),i}}}function v(t,a){let r=!1,u=0;return{update(n){n===1?r||(r=!0,u=a):r=!1},next(){return u===0?0:(u--,1)}}}function C(t,a,r,u,n){let c=1/t,s=0,e=0,o=a*c,i=u*c;return{next(){let l=Math.sin(s*x),m=Math.sin(e*x);return s+=o,e+=i,s>=1&&(s-=1),e>=1&&(e-=1),l*r+m*n}}}function D(t){return{next(){return Math.random()*2-1}}}function E(t,a,r){let u=0,n=0,c=0,s=0,e=0,o=0,i=0,l=0,m=1/r,p=.5/t,f=2*Math.PI;return{update(b){n=2*Math.tan(f*p*b),u=1/(1+m*n+n*n),c=n+m},process(b){return i=(b-c*s-e)*u,l=n*i+s,o=n*l+e,s=n*i+l,e=n*l+o,a===0?o:a===1?i:a===2?l:b}}}function h(t,a,r){let e=!1,o=a,i=r,l=Math.exp(-1/(o*t)),m=Math.exp(-1/(i*t)),p=0,f=0;return{update(b,A,g){b===1?e||(e=!0,p=1):e=!1,A!==o&&(o=A,l=Math.exp(-1/(Math.max(o,.01)*t))),g!==i&&(i=g,m=Math.exp(-1/(Math.max(i,.01)*t)))},next(){let b=0;switch(p){case 1:b=l*f+(1-l),b-f<=5e-8&&(p=2),f=b;break;case 2:b=m*f,f=b,b<=5e-8&&(p=0);break;case 0:default:b=0;break}return b}}}function d(t){switch(t){case 0:return k(sampleRate);case 1:return O(sampleRate);default:return console.warn("Invalid Drum8 type: ",t),k(sampleRate)}}var k=t=>{let a=y(t,90,48),r=v(t,1),u=h(t,.1,.1),n=E(t,0,1),c=Math.tanh;return(s,e)=>{a.update(e.gate[0],e.decay[0]*.5),u.update(e.gate[0],e.attack[0],e.decay[0]),n.update(200+200*e.tone[0]);for(let o=0;o<s.length;o++)s[o]=c(n.process(a.next()*u.next()+r.next()))}},O=t=>{let a=D(t),r=h(t,.1,.1),u=C(t,238,1,476,1),n=h(t,.01,.1),c=E(t,0,1);return(s,e)=>{r.update(e.gate[0],e.attack[0],e.decay[0]),n.update(e.gate[0],.01,e.snap[0]),c.update(500+500*e.tone[0]);for(let o=0;o<s.length;o++)s[o]=c.process(a.next()*r.next()+u.next()*n.next())}};var M=class extends AudioWorkletProcessor{r;t;g;constructor(a){super(),this.r=!0,this.t=0,this.g=d(this.t),this.port.onmessage=r=>{switch(r.data.type){case"DISCONNECT":this.r=!1;break}}}process(a,r,u){return this.t!==u.type[0]&&(this.g=d(u.type[0])),this.g(r[0][0],u),this.r}static get parameterDescriptors(){return[["gate",0,0,1],["attack",.01,0,2],["decay",.5,0,10],["level",.8,0,1],["snap",.2,0,1],["tone",.2,0,1]].map(([u,n,c,s])=>({name:u,defaultValue:n,minValue:c,maxValue:s,automationRate:"k-rate"}))}};registerProcessor("Drum8WorkletProcessor",M);})();`;
